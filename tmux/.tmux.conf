### Server options
# Set terminal color
set -g default-terminal screen-256color

# make delay shorter
set -sg escape-time 0


### Session options
# Set windows to be 1-indexed
set -g base-index 1

# Set default shell
set -g default-shell /usr/bin/fish

# Raises history limit
set -g history-limit 10000

# Enable mouse mode
set -g mouse on

# Attempt to set the client terminal title using the tsl and fsl terminfo(5) entries if they exist
set -g set-titles on

# Renumber windows when one is closed
set -g renumber-windows on

# Use vi or emacs-style key bindings in the status line, for example at the command prompt
set -g status-keys vi

# display a message instead of sending a bell when activity occurs
set -g visual-activity on

# display a message on a bell in a window
set -g visual-bell on

# prints a message after the interval has expired on a given window instead of sending a bell
set -g visual-silence on


### Window options
# Control automatic window renaming
setw -g automatic-rename on

# Set clock hour format
setw -g clock-mode-style 24

# Use vi key bindings in copy mode
setw -g mode-keys vi

# Monitor for activity in the window
setw -g monitor-activity on

# Monitor for a bell in the window
setw -g monitor-bell on

# Monitor for silence (no activity) in the window
setw -g monitor-silence 60

# Like base-index, but set the starting index for pane numbers
setw -g pane-base-index 1

# generate xterm-style function key sequences;
#  these have a number included to indicate modifiers such as Shift, Alt or Ctrl
setw -g xterm-keys on


### Pane options
# Allow programs in the pane to change the window name using a terminal escape sequence
set -g allow-rename on

# programs running inside the pane may use the terminal alternate screen feature
set -g alternate-screen on


### Environment
# Ignore EOFs to prevent accidental C-D
setenv -g 'IGNOREEOF' 2


### Bindings
# reload config file
bind r source-file ~/.tmux.conf \; display ".tmux.conf reloaded!"

## Binds xsel to all copy binds to also copy to system clipboard
# vi mode
bind -T copy-mode-vi Enter             send-keys -X copy-pipe-and-cancel "xsel --clipboard --input"
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel "xsel --clipboard --input"
bind -T copy-mode-vi C-j               send-keys -X copy-selection-and-cancel "xsel --clipboard --input"
bind -T copy-mode-vi D                 send-keys -X copy-end-of-line "xsel --clipboard --input"
# emacs mode
bind -T copy-mode C-k               send-keys -X copy-end-of-line "xsel --clipboard --input"
bind -T copy-mode C-w               send-keys -X copy-selection-and-cancel "xsel --clipboard --input"
bind -T copy-mode MouseDragEnd1Pane send-keys -X copy-selection-and-cancel "xsel --clipboard --input"
bind -T copy-mode M-w               send-keys -X copy-selection-and-cancel "xsel --clipboard --input"
### Bind copy without canceling keys
# vi mode
bind -T copy-mode-vi y              send-keys -X copy-pipe "xsel --clipboard --input" \; send -X clear-selection \; display "line yanked"

# synchronize all panes in a window
bind y setw synchronize-panes \; display "switched synchronized-panes"

# Bind new and split window commands so the pane starts in the current pane directory
bind -T prefix c new-window -c "#{pane_current_path}"
bind -T prefix '"' split-window -c "#{pane_current_path}"
bind -T prefix % split-window -h -c "#{pane_current_path}"


# Powerline
run-shell "$HOME/.local/bin/powerline-daemon -q || true"
run-shell '$HOME/.local/bin/powerline-config tmux setup'
